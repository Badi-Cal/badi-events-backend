// Code generated by MockGen. DO NOT EDIT.
// Source: models/users.go

// Package mock_models is a generated GoMock package.
package mock_models

import (
	models "badi-cal/badi-events-backend/models"
	orm "badi-cal/badi-events-backend/orm"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUsers is a mock of IUsers interface.
type MockIUsers struct {
	ctrl     *gomock.Controller
	recorder *MockIUsersMockRecorder
}

// MockIUsersMockRecorder is the mock recorder for MockIUsers.
type MockIUsersMockRecorder struct {
	mock *MockIUsers
}

// NewMockIUsers creates a new mock instance.
func NewMockIUsers(ctrl *gomock.Controller) *MockIUsers {
	mock := &MockIUsers{ctrl: ctrl}
	mock.recorder = &MockIUsersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUsers) EXPECT() *MockIUsersMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIUsers) Create(payload models.UserCreatePayload) (*orm.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", payload)
	ret0, _ := ret[0].(*orm.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIUsersMockRecorder) Create(payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIUsers)(nil).Create), payload)
}

// GetAll mocks base method.
func (m *MockIUsers) GetAll() ([]*orm.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*orm.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIUsersMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIUsers)(nil).GetAll))
}
